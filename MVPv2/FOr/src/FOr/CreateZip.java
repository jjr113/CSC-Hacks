/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FOr;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Jake
 */
public class CreateZip extends javax.swing.JFrame {

    private int numSem20_21, numSem21_22, numSem22_23;
    private int countSem20_21 = 0, countSem21_22, countSem22_23;
    private final String YEAR1 = "2021_2022", YEAR2 = "2022_2023", YEAR3 = "2023_2024";
    public CreateZip() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tabZipCreator = new javax.swing.JTabbedPane();
        pnlStart = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cmboChoice = new javax.swing.JComboBox<>();
        pnlSchool = new javax.swing.JPanel();
        lblChoice = new javax.swing.JLabel();
        cmboChoiceSchool = new javax.swing.JComboBox<>();
        lbl_I_am_a = new javax.swing.JLabel();
        cmboTypeOfStudent = new javax.swing.JComboBox<>();
        lbl_I_want_to_keep_track_ofYear1 = new javax.swing.JLabel();
        numSemestersYear1 = new javax.swing.JSpinner();
        lbl_semestersYear1 = new javax.swing.JLabel();
        lblYears = new javax.swing.JLabel();
        chkYear1 = new javax.swing.JCheckBox();
        chkYear2 = new javax.swing.JCheckBox();
        chkYear3 = new javax.swing.JCheckBox();
        lbl_I_am_a1 = new javax.swing.JLabel();
        lbl_I_want_to_keep_track_ofYear2 = new javax.swing.JLabel();
        numSemestersYear2 = new javax.swing.JSpinner();
        lbl_semestersYear2 = new javax.swing.JLabel();
        pnlYear1 = new javax.swing.JPanel();
        pnlSpringYear1 = new javax.swing.JPanel();
        txtAddSpringYear1 = new javax.swing.JTextField();
        btnAddSpringYear1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        listSpringClassesYear1 = new javax.swing.JList<>();
        txtRemoveSpringYear1 = new javax.swing.JTextField();
        btnRemoveSpringYear1 = new javax.swing.JButton();
        btnClearSpringYear1 = new javax.swing.JButton();
        lblSemestersYear1 = new javax.swing.JLabel();
        chkSpringYear1 = new javax.swing.JCheckBox();
        chkFallYear1 = new javax.swing.JCheckBox();
        pnlFallYear1 = new javax.swing.JPanel();
        txtAddFallYear1 = new javax.swing.JTextField();
        btnAddFallYear1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listFallClassesYear1 = new javax.swing.JList<>();
        txtRemoveFallYear1 = new javax.swing.JTextField();
        btnRemoveFallYear1 = new javax.swing.JButton();
        btnClearFallYear1 = new javax.swing.JButton();
        lblYear1 = new javax.swing.JLabel();
        lblNumSemestersYear1 = new javax.swing.JLabel();
        pnlYear2 = new javax.swing.JPanel();
        pnlSpringYear2 = new javax.swing.JPanel();
        txtAddSpringYear2 = new javax.swing.JTextField();
        btnAddSpringYear2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listSpringClassesYear2 = new javax.swing.JList<>();
        txtRemoveSpringYear2 = new javax.swing.JTextField();
        btnRemoveSpringYear2 = new javax.swing.JButton();
        btnClearSpringYear2 = new javax.swing.JButton();
        lblSemestersYear2 = new javax.swing.JLabel();
        chkSpringYear2 = new javax.swing.JCheckBox();
        chkFallYear2 = new javax.swing.JCheckBox();
        pnlFallYear2 = new javax.swing.JPanel();
        txtAddFallYear2 = new javax.swing.JTextField();
        btnAddFallYear2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listFallClassesYear2 = new javax.swing.JList<>();
        txtRemoveFallYear2 = new javax.swing.JTextField();
        btnRemoveFallYear2 = new javax.swing.JButton();
        btnClearFallYear2 = new javax.swing.JButton();
        lblYear2 = new javax.swing.JLabel();
        lblNumSemestersYear2 = new javax.swing.JLabel();
        btnDone = new javax.swing.JButton();
        pnl4 = new javax.swing.JPanel();
        pnl3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(71, 120, 197));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel2.setText("Zip Creator");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(327, 327, 327)
                .addComponent(jLabel2)
                .addContainerGap(334, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, -1));

        pnlStart.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("This zip is for");

        cmboChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "School", "Item 3", "Item 4" }));
        cmboChoice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmboChoiceItemStateChanged(evt);
            }
        });
        cmboChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboChoiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlStartLayout = new javax.swing.GroupLayout(pnlStart);
        pnlStart.setLayout(pnlStartLayout);
        pnlStartLayout.setHorizontalGroup(
            pnlStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStartLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmboChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(685, Short.MAX_VALUE))
        );
        pnlStartLayout.setVerticalGroup(
            pnlStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStartLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmboChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(481, Short.MAX_VALUE))
        );

        tabZipCreator.addTab("Start", pnlStart);

        pnlSchool.setBackground(new java.awt.Color(255, 255, 255));
        pnlSchool.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblChoice.setText("This zip is for");
        pnlSchool.add(lblChoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 22, -1, -1));

        cmboChoiceSchool.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "School", "Item 3", "Item 4" }));
        cmboChoiceSchool.setSelectedIndex(1);
        cmboChoiceSchool.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmboChoiceSchoolItemStateChanged(evt);
            }
        });
        pnlSchool.add(cmboChoiceSchool, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 17, 79, -1));

        lbl_I_am_a.setText(". I am a");
        pnlSchool.add(lbl_I_am_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 22, -1, -1));

        cmboTypeOfStudent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "High School Student", "Ungraduate Student at a University", "Graduate Student at a University" }));
        cmboTypeOfStudent.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmboTypeOfStudentItemStateChanged(evt);
            }
        });
        pnlSchool.add(cmboTypeOfStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 17, 196, -1));

        lbl_I_want_to_keep_track_ofYear1.setText(" I want to keep track of ");
        pnlSchool.add(lbl_I_want_to_keep_track_ofYear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, 20));

        numSemestersYear1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3, 1));
        numSemestersYear1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numSemestersYear1StateChanged(evt);
            }
        });
        pnlSchool.add(numSemestersYear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, -1, 20));

        lbl_semestersYear1.setText("semesters in the 2020-2021 school year.");
        pnlSchool.add(lbl_semestersYear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, -1, 20));

        lblYears.setText("I want to keep track of the years");
        pnlSchool.add(lblYears, new org.netbeans.lib.awtextra.AbsoluteConstraints(426, 23, -1, -1));

        chkYear1.setText("2020-2021");
        chkYear1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkYear1ItemStateChanged(evt);
            }
        });
        pnlSchool.add(chkYear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(602, 19, -1, -1));

        chkYear2.setText("2021-2022");
        chkYear2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkYear2ItemStateChanged(evt);
            }
        });
        pnlSchool.add(chkYear2, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 19, -1, -1));

        chkYear3.setText("2022-2023");
        chkYear3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkYear3ActionPerformed(evt);
            }
        });
        pnlSchool.add(chkYear3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 50, -1, -1));

        lbl_I_am_a1.setText(".");
        pnlSchool.add(lbl_I_am_a1, new org.netbeans.lib.awtextra.AbsoluteConstraints(594, 63, 40, -1));

        lbl_I_want_to_keep_track_ofYear2.setText(" I want to keep track of ");
        pnlSchool.add(lbl_I_want_to_keep_track_ofYear2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, -1, 20));

        numSemestersYear2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3, 1));
        numSemestersYear2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numSemestersYear2StateChanged(evt);
            }
        });
        pnlSchool.add(numSemestersYear2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, -1, 20));

        lbl_semestersYear2.setText("semesters in the 2021-2022 school year.");
        pnlSchool.add(lbl_semestersYear2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 90, -1, 20));

        pnlYear1.setEnabled(false);

        txtAddSpringYear1.setText(" ");

        btnAddSpringYear1.setText("Add Class");
        btnAddSpringYear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSpring20_21ActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(listSpringClassesYear1);

        txtRemoveSpringYear1.setText(" ");

        btnRemoveSpringYear1.setText("Remove Class");
        btnRemoveSpringYear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSpring20_21ActionPerformed(evt);
            }
        });

        btnClearSpringYear1.setText("Remove all classes");
        btnClearSpringYear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSpring20_21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSpringYear1Layout = new javax.swing.GroupLayout(pnlSpringYear1);
        pnlSpringYear1.setLayout(pnlSpringYear1Layout);
        pnlSpringYear1Layout.setHorizontalGroup(
            pnlSpringYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSpringYear1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSpringYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClearSpringYear1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlSpringYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSpringYear1Layout.createSequentialGroup()
                            .addComponent(txtRemoveSpringYear1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnRemoveSpringYear1)))
                    .addGroup(pnlSpringYear1Layout.createSequentialGroup()
                        .addComponent(txtAddSpringYear1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddSpringYear1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlSpringYear1Layout.setVerticalGroup(
            pnlSpringYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSpringYear1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlSpringYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddSpringYear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddSpringYear1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSpringYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRemoveSpringYear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveSpringYear1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearSpringYear1))
        );

        lblSemestersYear1.setText("Semesters:");

        chkSpringYear1.setText("Spring 2020-2021");
        chkSpringYear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSpringYear1ActionPerformed(evt);
            }
        });

        chkFallYear1.setText("Fall 2020-2021");
        chkFallYear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFallYear1ActionPerformed(evt);
            }
        });

        txtAddFallYear1.setText(" ");

        btnAddFallYear1.setText("Add Class");
        btnAddFallYear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFallYear1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listFallClassesYear1);

        txtRemoveFallYear1.setText(" ");

        btnRemoveFallYear1.setText("Remove Class");
        btnRemoveFallYear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFallYear1ActionPerformed(evt);
            }
        });

        btnClearFallYear1.setText("Remove all classes");
        btnClearFallYear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFallYear1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFallYear1Layout = new javax.swing.GroupLayout(pnlFallYear1);
        pnlFallYear1.setLayout(pnlFallYear1Layout);
        pnlFallYear1Layout.setHorizontalGroup(
            pnlFallYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFallYear1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFallYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFallYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlFallYear1Layout.createSequentialGroup()
                            .addComponent(txtRemoveFallYear1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnRemoveFallYear1)))
                    .addGroup(pnlFallYear1Layout.createSequentialGroup()
                        .addComponent(txtAddFallYear1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddFallYear1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnClearFallYear1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFallYear1Layout.setVerticalGroup(
            pnlFallYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFallYear1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlFallYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddFallYear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddFallYear1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFallYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRemoveFallYear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveFallYear1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearFallYear1))
        );

        lblYear1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblYear1.setText("2020-2021");

        lblNumSemestersYear1.setText("0");

        javax.swing.GroupLayout pnlYear1Layout = new javax.swing.GroupLayout(pnlYear1);
        pnlYear1.setLayout(pnlYear1Layout);
        pnlYear1Layout.setHorizontalGroup(
            pnlYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlYear1Layout.createSequentialGroup()
                .addGroup(pnlYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlYear1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlFallYear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkFallYear1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chkSpringYear1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlSpringYear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlYear1Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addGroup(pnlYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlYear1Layout.createSequentialGroup()
                                .addComponent(lblSemestersYear1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNumSemestersYear1))
                            .addComponent(lblYear1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlYear1Layout.setVerticalGroup(
            pnlYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlYear1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblYear1)
                .addGap(13, 13, 13)
                .addGroup(pnlYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemestersYear1)
                    .addComponent(lblNumSemestersYear1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlYear1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlYear1Layout.createSequentialGroup()
                        .addComponent(chkSpringYear1)
                        .addGap(18, 18, 18)
                        .addComponent(pnlSpringYear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlYear1Layout.createSequentialGroup()
                        .addComponent(chkFallYear1)
                        .addGap(18, 18, 18)
                        .addComponent(pnlFallYear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSchool.add(pnlYear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 400, 340));

        txtAddSpringYear2.setText(" ");

        btnAddSpringYear2.setText("Add Class");
        btnAddSpringYear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSpringYear2ActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(listSpringClassesYear2);

        txtRemoveSpringYear2.setText(" ");

        btnRemoveSpringYear2.setText("Remove Class");
        btnRemoveSpringYear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSpringYear2ActionPerformed(evt);
            }
        });

        btnClearSpringYear2.setText("Remove all classes");
        btnClearSpringYear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSpringYear2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSpringYear2Layout = new javax.swing.GroupLayout(pnlSpringYear2);
        pnlSpringYear2.setLayout(pnlSpringYear2Layout);
        pnlSpringYear2Layout.setHorizontalGroup(
            pnlSpringYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSpringYear2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSpringYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClearSpringYear2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlSpringYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSpringYear2Layout.createSequentialGroup()
                            .addComponent(txtRemoveSpringYear2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnRemoveSpringYear2)))
                    .addGroup(pnlSpringYear2Layout.createSequentialGroup()
                        .addComponent(txtAddSpringYear2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddSpringYear2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlSpringYear2Layout.setVerticalGroup(
            pnlSpringYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSpringYear2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlSpringYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddSpringYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddSpringYear2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSpringYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRemoveSpringYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveSpringYear2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearSpringYear2))
        );

        lblSemestersYear2.setText("Semesters:");

        chkSpringYear2.setText("Spring 2021-2022");
        chkSpringYear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSpringYear2ActionPerformed(evt);
            }
        });

        chkFallYear2.setText("Fall 2021-2022");
        chkFallYear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFallYear2ActionPerformed(evt);
            }
        });

        txtAddFallYear2.setText(" ");

        btnAddFallYear2.setText("Add Class");
        btnAddFallYear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFallYear2ActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(listFallClassesYear2);

        txtRemoveFallYear2.setText(" ");

        btnRemoveFallYear2.setText("Remove Class");
        btnRemoveFallYear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFallYear2ActionPerformed(evt);
            }
        });

        btnClearFallYear2.setText("Remove all classes");
        btnClearFallYear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFallYear2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFallYear2Layout = new javax.swing.GroupLayout(pnlFallYear2);
        pnlFallYear2.setLayout(pnlFallYear2Layout);
        pnlFallYear2Layout.setHorizontalGroup(
            pnlFallYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFallYear2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFallYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFallYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlFallYear2Layout.createSequentialGroup()
                            .addComponent(txtRemoveFallYear2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnRemoveFallYear2)))
                    .addGroup(pnlFallYear2Layout.createSequentialGroup()
                        .addComponent(txtAddFallYear2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddFallYear2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnClearFallYear2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFallYear2Layout.setVerticalGroup(
            pnlFallYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFallYear2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlFallYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddFallYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddFallYear2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFallYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRemoveFallYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveFallYear2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearFallYear2))
        );

        lblYear2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblYear2.setText("2021-2022");

        lblNumSemestersYear2.setText("0");

        javax.swing.GroupLayout pnlYear2Layout = new javax.swing.GroupLayout(pnlYear2);
        pnlYear2.setLayout(pnlYear2Layout);
        pnlYear2Layout.setHorizontalGroup(
            pnlYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlYear2Layout.createSequentialGroup()
                .addGroup(pnlYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlYear2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlFallYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkFallYear2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chkSpringYear2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlSpringYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlYear2Layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addGroup(pnlYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlYear2Layout.createSequentialGroup()
                                .addComponent(lblSemestersYear2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNumSemestersYear2))
                            .addComponent(lblYear2))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        pnlYear2Layout.setVerticalGroup(
            pnlYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlYear2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblYear2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(pnlYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemestersYear2)
                    .addComponent(lblNumSemestersYear2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlYear2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlYear2Layout.createSequentialGroup()
                        .addComponent(chkFallYear2)
                        .addGap(18, 18, 18)
                        .addComponent(pnlFallYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlYear2Layout.createSequentialGroup()
                        .addComponent(chkSpringYear2)
                        .addGap(18, 18, 18)
                        .addComponent(pnlSpringYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSchool.add(pnlYear2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 420, 340));

        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });
        pnlSchool.add(btnDone, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 470, 240, -1));

        tabZipCreator.addTab("School", pnlSchool);

        javax.swing.GroupLayout pnl4Layout = new javax.swing.GroupLayout(pnl4);
        pnl4.setLayout(pnl4Layout);
        pnl4Layout.setHorizontalGroup(
            pnl4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 845, Short.MAX_VALUE)
        );
        pnl4Layout.setVerticalGroup(
            pnl4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
        );

        tabZipCreator.addTab("tab3", pnl4);

        javax.swing.GroupLayout pnl3Layout = new javax.swing.GroupLayout(pnl3);
        pnl3.setLayout(pnl3Layout);
        pnl3Layout.setHorizontalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 845, Short.MAX_VALUE)
        );
        pnl3Layout.setVerticalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
        );

        tabZipCreator.addTab("tab4", pnl3);

        getContentPane().add(tabZipCreator, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 850, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmboChoiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmboChoiceItemStateChanged
        //if first tabs combo box is equal to "School", change the tab to the 
        //School tab and have everything invisible until they complete the survey
        if (cmboChoice.getSelectedItem().equals("School"))
        {
            tabZipCreator.setSelectedIndex(1);
            cmboChoiceSchool.setSelectedIndex(1);
            lblYears.setVisible(false);
            chkYear1.setVisible(false);
            chkYear2.setVisible(false);
            chkYear3.setVisible(false);
            pnlYear1.setVisible(false);
            pnlYear2.setVisible(false);
            lbl_I_want_to_keep_track_ofYear1.setVisible(false);
            lbl_I_want_to_keep_track_ofYear2.setVisible(false);
            lbl_semestersYear1.setVisible(false);
            lbl_semestersYear2.setVisible(false);
            numSemestersYear1.setVisible(false);
            numSemestersYear2.setVisible(false);
            btnDone.setVisible(false);
            //disables the panels ahead of time where you input classes
            disableAllYears();
        }
        //
        else if (cmboChoice.getSelectedItem().equals("item3"))
        {
            tabZipCreator.setSelectedIndex(2);
        }
        else
        {
            chkYear1.setSelected(false);
            chkYear2.setSelected(false);
            chkYear3.setSelected(false);
            disableAllYears();
        }
    }//GEN-LAST:event_cmboChoiceItemStateChanged

    private void cmboChoiceSchoolItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmboChoiceSchoolItemStateChanged
        //checks if the user abandons the School tab, if so then set everything in school tab to
        //disabled and invisible
        if (cmboChoiceSchool.getSelectedItem().equals("Item 3"))
        {
            tabZipCreator.setSelectedIndex(2);
            disableSchoolTab();
        }
        else if (cmboChoiceSchool.getSelectedItem().equals(" "))
        {
            cmboChoice.setSelectedIndex(0);
            tabZipCreator.setSelectedIndex(0);
            disableSchoolTab();
        }
    }//GEN-LAST:event_cmboChoiceSchoolItemStateChanged
    //sets everything in school tab to its default values (invisible and disabled)
    private void disableSchoolTab()
    {
        cmboTypeOfStudent.setSelectedIndex(0);
        chkYear1.setSelected(false);
        chkYear2.setSelected(false);
        chkYear3.setSelected(false);
        chkYear1.setVisible(false);
        chkYear2.setVisible(false);
        chkYear3.setVisible(false);
        pnlYear1.setVisible(false);
        pnlYear2.setVisible(false);
        lbl_I_want_to_keep_track_ofYear1.setVisible(false);
        lbl_I_want_to_keep_track_ofYear2.setVisible(false);
        lbl_semestersYear1.setVisible(false);
        lbl_semestersYear2.setVisible(false);
        lblNumSemestersYear1.setVisible(false);
        lblNumSemestersYear2.setVisible(false);
        numSemestersYear1.setVisible(false);
        numSemestersYear2.setVisible(false);
        btnDone.setVisible(false);
        disableAllYears();
    }
    //when the student picks what type of student they are, set everything to be visible
    private void cmboTypeOfStudentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmboTypeOfStudentItemStateChanged
        lblYears.setVisible(true);
        chkYear1.setVisible(true);
        chkYear2.setVisible(true);
        chkYear3.setVisible(true);
        pnlYear1.setVisible(true);
        pnlYear2.setVisible(true);
        lbl_I_want_to_keep_track_ofYear1.setVisible(true);
        lbl_I_want_to_keep_track_ofYear2.setVisible(true);
        lblNumSemestersYear1.setVisible(true);
        lblNumSemestersYear2.setVisible(true);
        numSemestersYear1.setVisible(true);
        numSemestersYear2.setVisible(true);
        lbl_semestersYear1.setVisible(true);
        lbl_semestersYear2.setVisible(true);
        btnDone.setVisible(true);
        disableAllYears();
    }//GEN-LAST:event_cmboTypeOfStudentItemStateChanged
    //if semesters for year 1 is changed then change numSem20_21 variable to selected value, set lbl to that value
    //and uncheck fall and spring for year 1 (also disables year 1)
    private void numSemestersYear1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numSemestersYear1StateChanged
        if ((int)numSemestersYear1.getValue() == 0)
        {
            lblNumSemestersYear1.setText("0");
            numSem20_21 = 0;
        }
        else if ((int)numSemestersYear1.getValue() == 1)
        {
            lblNumSemestersYear1.setText("1");
            numSem20_21 = 1;
        }
        else if ((int)numSemestersYear1.getValue() == 2)
        {
            lblNumSemestersYear1.setText("2");
            numSem20_21 = 2;
        }
        else if ((int)numSemestersYear1.getValue() == 3)
        {
            lblNumSemestersYear1.setText("3");
            numSem20_21 = 3;
        }
        chkFallYear1.setSelected(false);
        chkSpringYear1.setSelected(false);
        disableFallYear1();
        disableSpringYear1();   
    }//GEN-LAST:event_numSemestersYear1StateChanged
    //if year 1 is checked then enable year 1, set values to its default, and set check boxes for fall
    //and spring to unchecked
    private void chkYear1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkYear1ItemStateChanged
        //disables all years if all the years are unchecked
        if (chkYear1.isSelected() == false && chkYear2.isSelected() == false && chkYear3.isSelected() == false)
        {
            disableAllYears();
        }
        if (chkYear1.isSelected() == true)
        {
            lbl_I_want_to_keep_track_ofYear1.setEnabled(true);
            lbl_semestersYear1.setEnabled(true);
            numSemestersYear1.setEnabled(true);
            numSemestersYear1.setValue(0);
            numSem20_21 = 0;
            countSem20_21 = 0;
            lblYear1.setEnabled(true);
            lblSemestersYear1.setEnabled(true);
            lblNumSemestersYear1.setEnabled(true);
            chkFallYear1.setEnabled(true);
            chkSpringYear1.setEnabled(true);
            chkFallYear1.setSelected(false);
            chkSpringYear1.setSelected(false);
        }
        else
        {
            disableYear1();
        }
            
    }//GEN-LAST:event_chkYear1ItemStateChanged
    //holds classes from each list
    DefaultListModel mod = new DefaultListModel();
    DefaultListModel mod2 = new DefaultListModel();
    DefaultListModel mod3 = new DefaultListModel();
    DefaultListModel mod4 = new DefaultListModel();
    private void chkYear3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkYear3ActionPerformed
        if (chkYear1.isSelected() == false && chkYear2.isSelected() == false && chkYear3.isSelected() == false)
        {
            disableAllYears();
        }
    }//GEN-LAST:event_chkYear3ActionPerformed
    //if state is changed, then disable year 2, set lbl for the amount of semesters they want to keep track of in that year,
    //change the number of semesters, and set the checkboxes for each semester to unchecked
    private void numSemestersYear2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numSemestersYear2StateChanged
        if ((int)numSemestersYear2.getValue() == 0)
        {
            lblNumSemestersYear2.setText("0");
            numSem21_22 = 0;
        }
        else if ((int)numSemestersYear2.getValue() == 1)
        {
            lblNumSemestersYear2.setText("1");
            numSem21_22 = 1;
        }
        else if ((int)numSemestersYear2.getValue() == 2)
        {
            lblNumSemestersYear2.setText("2");
            numSem21_22 = 2;
        }
        else if ((int)numSemestersYear2.getValue() == 3)
        {
            lblNumSemestersYear2.setText("3");
            numSem21_22 = 3;
        }
        chkFallYear2.setSelected(false);
        chkSpringYear2.setSelected(false);
        disableFallYear2();
        disableSpringYear2();
    }//GEN-LAST:event_numSemestersYear2StateChanged
    //clears all the classes for the fall semester in year 2
    private void btnClearFallYear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFallYear2ActionPerformed
        listFallClassesYear2.setModel(mod3);
        mod3.removeAllElements();
    }//GEN-LAST:event_btnClearFallYear2ActionPerformed
    //removes specified class for the fall semester in year 2.
    //if it is not found then message box will show and txtField is set to ""
    private void btnRemoveFallYear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFallYear2ActionPerformed
        listFallClassesYear2.setModel(mod3);
        if (mod3.contains(txtRemoveFallYear2.getText()))
            mod3.removeElement(txtRemoveFallYear2.getText());
        else
            JOptionPane.showMessageDialog(null, "The class " + txtRemoveFallYear2.getText() + " was not found.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        txtRemoveFallYear2.setText("");
    }//GEN-LAST:event_btnRemoveFallYear2ActionPerformed
    //Adds specified class for the fall semester in year 2.
    //if it is already a class in the list then message box will show, txtField is set to "", and class is not added
    private void btnAddFallYear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFallYear2ActionPerformed
        listFallClassesYear2.setModel(mod3);
        if (!txtAddFallYear2.getText().equals(""))
            if (!mod3.contains(txtAddFallYear2.getText()))
                mod3.addElement(txtAddFallYear2.getText());
        else
            JOptionPane.showMessageDialog(null, "That class is already added.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        txtAddFallYear2.setText("");
    }//GEN-LAST:event_btnAddFallYear2ActionPerformed
    //if checkbox is checked, check if the number of semesters checked is less than the number of semesters
    //they want to keep track of for year 2. If so then enable fall year 2. If not then show message box and uncheck this checkbox.
    //
    //if checkbox is unchecked, disable fall year and subtract 1 from the semester count
    private void chkFallYear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFallYear2ActionPerformed
        if (chkFallYear2.isSelected() == true)
        {
            if (countSem21_22 < numSem21_22)
            {
                txtAddFallYear2.setEnabled(true);
                btnAddFallYear2.setEnabled(true);
                listFallClassesYear2.setEnabled(true);
                txtRemoveFallYear2.setEnabled(true);
                btnRemoveFallYear2.setEnabled(true);
                btnClearFallYear2.setEnabled(true);
                countSem21_22++;
            }
            else
            {
                JOptionPane.showMessageDialog(null, "You have reached number of semesters", "Warning", JOptionPane.INFORMATION_MESSAGE);
                chkFallYear2.setSelected(false);  
            }
        }
        else
        {
            disableFallYear2();
            countSem21_22--;
        }
    }//GEN-LAST:event_chkFallYear2ActionPerformed
    //if checkbox is checked, check if the number of semesters checked is less than the number of semesters
    //they want to keep track of for year 2. If so then enable spring year 2. If not then show message box and uncheck this checkbox.
    //
    //if checkbox is unchecked, disable spring year and subtract 1 from the semester count
    private void chkSpringYear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSpringYear2ActionPerformed
        if (chkSpringYear2.isSelected() == true)
        {
            if (countSem21_22 < numSem21_22)
            {
                txtAddSpringYear2.setEnabled(true);
                btnAddSpringYear2.setEnabled(true);
                listSpringClassesYear2.setEnabled(true);
                txtRemoveSpringYear2.setEnabled(true);
                btnRemoveSpringYear2.setEnabled(true);
                btnClearSpringYear2.setEnabled(true);
                countSem21_22++;
            }
            else
            {
                JOptionPane.showMessageDialog(null, "You have reached number of semesters", "Warning", JOptionPane.INFORMATION_MESSAGE);
                chkSpringYear2.setSelected(false);  
            }
        }
        else
        {
            disableSpringYear2();
            countSem21_22--;
        }
    }//GEN-LAST:event_chkSpringYear2ActionPerformed
    //clears all the classes for the Spring semester in year 2
    private void btnClearSpringYear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSpringYear2ActionPerformed
        listSpringClassesYear2.setModel(mod4);
        mod4.removeAllElements();
    }//GEN-LAST:event_btnClearSpringYear2ActionPerformed
    //removes specified class for the spring semester in year 2.
    //if it is not found then message box will show and txtField is set to ""
    private void btnRemoveSpringYear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSpringYear2ActionPerformed
        listSpringClassesYear2.setModel(mod4);
        if (mod4.contains(txtRemoveSpringYear2.getText()))
            mod4.removeElement(txtRemoveSpringYear2.getText());
        else
            JOptionPane.showMessageDialog(null, "The class " + txtRemoveSpringYear2.getText() + " was not found.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        txtRemoveSpringYear2.setText("");
    }//GEN-LAST:event_btnRemoveSpringYear2ActionPerformed
    //Adds specified class for the spring semester in year 2.
    //if it is already a class in the list then message box will show, txtField is set to "", and class is not added
    private void btnAddSpringYear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSpringYear2ActionPerformed
        listSpringClassesYear2.setModel(mod4);
        if (!txtAddSpringYear2.getText().equals(""))
            if (!mod4.contains(txtAddSpringYear2.getText()))
                mod4.addElement(txtAddSpringYear2.getText());
        else
            JOptionPane.showMessageDialog(null, "That class is already added.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        txtAddSpringYear2.setText("");
    }//GEN-LAST:event_btnAddSpringYear2ActionPerformed
    //clears all the classes for the Fall semester in year 1
    private void btnClearFallYear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFallYear1ActionPerformed
        listFallClassesYear1.setModel(mod);
        mod.removeAllElements();
    }//GEN-LAST:event_btnClearFallYear1ActionPerformed
    //removes specified class for the fall semester in year 1.
    //if it is not found then message box will show and txtField is set to ""
    private void btnRemoveFallYear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFallYear1ActionPerformed
        listFallClassesYear1.setModel(mod);
        if (mod.contains(txtRemoveFallYear1.getText()))
            mod.removeElement(txtRemoveFallYear1.getText());
        else
            JOptionPane.showMessageDialog(null, "The class " + txtRemoveFallYear1.getText() + " was not found.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        txtRemoveFallYear1.setText("");
    }//GEN-LAST:event_btnRemoveFallYear1ActionPerformed
    //Adds specified class for the fall semester in year 1.
    //if it is already a class in the list then message box will show, txtField is set to "", and class is not added
    private void btnAddFallYear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFallYear1ActionPerformed
        listFallClassesYear1.setModel(mod);
        if (!txtAddFallYear1.getText().equals(""))
            if (!mod.contains(txtAddFallYear1.getText()))
                mod.addElement(txtAddFallYear1.getText());
        else
            JOptionPane.showMessageDialog(null, "That class is already added.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        txtAddFallYear1.setText("");
    }//GEN-LAST:event_btnAddFallYear1ActionPerformed
    //if checkbox is checked, check if the number of semesters checked is less than the number of semesters
    //they want to keep track of for year 1. If so then enable fall year 1. If not then show message box and uncheck this checkbox.
    //
    //if checkbox is unchecked, disable fall year and subtract 1 from the semester count
    private void chkFallYear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFallYear1ActionPerformed
        if (chkFallYear1.isSelected() == true)
        {
            if (countSem20_21 < numSem20_21)
            {
                txtAddFallYear1.setEnabled(true);
                btnAddFallYear1.setEnabled(true);
                listFallClassesYear1.setEnabled(true);
                txtRemoveFallYear1.setEnabled(true);
                btnRemoveFallYear1.setEnabled(true);
                btnClearFallYear1.setEnabled(true);
                countSem20_21++;
            }
            else
            {
                JOptionPane.showMessageDialog(null, "You have reached number of semesters", "Warning", JOptionPane.INFORMATION_MESSAGE);
                chkFallYear1.setSelected(false);  
            }
        }
        else
        {
            disableFallYear1();
            countSem20_21--;
        }
    }//GEN-LAST:event_chkFallYear1ActionPerformed
    //if checkbox is checked, check if the number of semesters checked is less than the number of semesters
    //they want to keep track of for year 1. If so then enable spring year 1. If not then show message box and uncheck this checkbox.
    //
    //if checkbox is unchecked, disable spring year and subtract 1 from the semester count
    private void chkSpringYear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSpringYear1ActionPerformed
        if (chkSpringYear1.isSelected() == true)
        {
            if (countSem20_21 < numSem20_21)
            {
                txtAddSpringYear1.setEnabled(true);
                btnAddSpringYear1.setEnabled(true);
                listSpringClassesYear1.setEnabled(true);
                txtRemoveSpringYear1.setEnabled(true);
                btnRemoveSpringYear1.setEnabled(true);
                btnClearSpringYear1.setEnabled(true);
                countSem20_21++;
            }
            else
            {
                JOptionPane.showMessageDialog(null, "You have reached number of semesters", "Warning", JOptionPane.INFORMATION_MESSAGE);
                chkSpringYear1.setSelected(false);  
            }
        }
        else
        {
            disableSpringYear1();
            countSem20_21--;
        }
    }//GEN-LAST:event_chkSpringYear1ActionPerformed
    //clears all the classes for the spring semester in year 1
    private void btnClearSpring20_21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSpring20_21ActionPerformed
        listSpringClassesYear1.setModel(mod2);
        mod2.removeAllElements();
    }//GEN-LAST:event_btnClearSpring20_21ActionPerformed
    //removes specified class for the spring semester in year 1.
    //if it is not found then message box will show and txtField is set to ""
    private void btnRemoveSpring20_21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSpring20_21ActionPerformed
        listSpringClassesYear1.setModel(mod2);
        if (mod2.contains(txtRemoveSpringYear1.getText()))
            mod2.removeElement(txtRemoveSpringYear1.getText());
        else
            JOptionPane.showMessageDialog(null, "The class " + txtRemoveSpringYear1.getText() + " was not found.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        txtRemoveSpringYear1.setText("");
    }//GEN-LAST:event_btnRemoveSpring20_21ActionPerformed
    //Adds specified class for the spring semester in year 1.
    //if it is already a class in the list then message box will show, txtField is set to "", and class is not added
    private void btnAddSpring20_21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSpring20_21ActionPerformed
        listSpringClassesYear1.setModel(mod2);
        if (!txtAddSpringYear1.getText().equals(""))
            if (!mod2.contains(txtAddSpringYear1.getText()))
            mod2.addElement(txtAddSpringYear1.getText());
        else
            JOptionPane.showMessageDialog(null, "That class is already added.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        txtAddSpringYear1.setText("");
    }//GEN-LAST:event_btnAddSpring20_21ActionPerformed
    //if year 2 is checked then enable year 2, set values to its default, and set check boxes for fall
    //and spring to unchecked
    private void chkYear2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkYear2ItemStateChanged
        //disables all years if all the years are unchecked
        if (chkYear1.isSelected() == false && chkYear2.isSelected() == false && chkYear3.isSelected() == false)
        {
            disableAllYears();
        }
        if (chkYear2.isSelected() == true)
        {
            lbl_I_want_to_keep_track_ofYear2.setEnabled(true);
            lbl_semestersYear2.setEnabled(true);
            numSemestersYear2.setEnabled(true);
            numSemestersYear2.setValue(0);
            numSem21_22 = 0;
            countSem21_22 = 0;
            lblYear2.setEnabled(true);
            lblSemestersYear2.setEnabled(true);
            lblNumSemestersYear2.setEnabled(true);
            chkFallYear2.setEnabled(true);
            chkFallYear2.setSelected(false);
            chkSpringYear2.setEnabled(true);
            chkSpringYear2.setSelected(false);
        }
        else
        {
            disableYear2();
        }
    }//GEN-LAST:event_chkYear2ItemStateChanged
    //When done button is pressed, find directories in the C:\\Users\\user.name, display them to the combo box when creating a zip,
    //and set the last panel for creating a zip to visible (create a zip and combo box for where they want to store the zip)
    //This will allow the user to pick from their own directory where they want to store this zip.
    File file;
    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        if (mod.isEmpty() == false || mod2.isEmpty() == false || mod3.isEmpty() == false || mod4.isEmpty() == false )
        {
            JOptionPane.showMessageDialog(null, "Please select where you would want to store this zip!", "Attention", JOptionPane.INFORMATION_MESSAGE);
            //opens directory chooser
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int option = fileChooser.showOpenDialog(null);
            if(option == JFileChooser.APPROVE_OPTION){
               file = fileChooser.getSelectedFile();
            }else{
                System.out.println("nothing");
            }
            //creates zip
            try {
                File f = new File(file.getPath() + "\\School.zip");
                boolean cont = true;
                if (f.exists())
                {
                    int choice = JOptionPane.showConfirmDialog(pnlSchool,"There is already a file named that. Would you like to replace it?","An Insane Question",JOptionPane.YES_NO_OPTION);
                    if (choice != 0)
                        cont = false;
                }
                if (cont)
                {
                    Zip z = new Zip("School", new FolderLinkedList<Folder>(), f);
                    if (mod.isEmpty() == false || mod2.isEmpty() == false)
                    {
                        z.addFolder(new Folder("2020_2021"));
                        if (mod.isEmpty() == false)
                        {
                            Folder fall20_21 = new Folder("Fall Semester");
                            z.addToAFolder(fall20_21, "");
                            for (int i = 0; i < mod.size(); i++)
                            {
                                z.addToAFolder(new Folder(mod.getElementAt(i).toString()+ "/docs") , "2020_2021/Fall Semester");
                                z.addToAFolder(new Folder(mod.getElementAt(i).toString()+ "/notes") , "2020_2021/Fall Semester");
                            }
                        }
                        if (mod2.isEmpty() == false)
                        {
                            Folder spring20_21 = new Folder("Spring Semester");
                            z.addToAFolder(spring20_21, "");
                            for (int i = 0; i < mod2.size(); i++)
                            {
                                z.addToAFolder(new Folder(mod2.getElementAt(i).toString()+ "/docs"), "2020_2021/Spring Semester");
                                z.addToAFolder(new Folder(mod2.getElementAt(i).toString()+ "/notes"), "2020_2021/Spring Semester");
                            }

                        }
                    }
                    if (mod3.isEmpty() == false || mod4.isEmpty() == false)
                    {
                        z.addFolder(new Folder("2021_2022"));
                        if (mod3.isEmpty() == false)
                        {
                            Folder fall21_22 = new Folder("Fall Semester");
                            z.addToAFolder(fall21_22, "2021_2022");
                            for (int i = 0; i < mod3.size(); i++)
                            {
                                z.addToAFolder(new Folder(mod3.getElementAt(i).toString()+ "/docs"), "2021_2022/Fall Semester");
                                z.addToAFolder(new Folder(mod3.getElementAt(i).toString()+ "/notes"), "2021_2022/Fall Semester");
                            }

                        }
                        if (mod4.isEmpty() == false)
                        {
                            Folder spring21_22 = new Folder("Spring Semester");
                            z.addToAFolder(spring21_22, "2021_2022");
                            for (int i = 0; i < mod4.size(); i++)
                            {
                                z.addToAFolder(new Folder(mod4.getElementAt(i).toString()+ "/docs"), "2021_2022/Spring Semester");
                                z.addToAFolder(new Folder(mod4.getElementAt(i).toString()+ "/notes"), "2021_2022/Spring Semester");
                            }
                        }

                    }

                    z.createZip();
                    JOptionPane.showMessageDialog(null, "Your zip has been created", "Attention", JOptionPane.INFORMATION_MESSAGE);
                    new Home().setVisible(true);
                    this.dispose();
                }


            } catch (FileNotFoundException ex) {
                Logger.getLogger(CreateZip.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(CreateZip.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
            JOptionPane.showMessageDialog(null, "You still need to add classes", "Warning", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnDoneActionPerformed

    private void cmboChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmboChoiceActionPerformed
    //disables all years
    public void disableAllYears()
    {
        disableYear1();
        disableYear2();
    }
    //disables year 1 (fall and spring year)
    public void disableYear1()
    {
        lbl_I_want_to_keep_track_ofYear1.setEnabled(false);
        lbl_semestersYear1.setEnabled(false);
        numSemestersYear1.setEnabled(false);
        numSemestersYear1.setValue(0);
        numSem20_21 = 0;
        lblYear1.setEnabled(false);
        lblSemestersYear1.setEnabled(false);
        lblNumSemestersYear1.setEnabled(false);
        chkFallYear1.setEnabled(false);
        chkFallYear1.setSelected(false);
        chkSpringYear1.setEnabled(false);
        chkSpringYear1.setSelected(false);
        disableFallYear1();
        disableSpringYear1();
        countSem20_21 = 0;
    }
    //disables fall year 1
    public void disableFallYear1()
    {
        txtAddFallYear1.setEnabled(false);
        btnAddFallYear1.setEnabled(false);
        listFallClassesYear1.setEnabled(false);
        txtRemoveFallYear1.setEnabled(false);
        btnRemoveFallYear1.setEnabled(false);
        btnClearFallYear1.setEnabled(false);
        txtAddFallYear1.setText("");
        mod.removeAllElements();
        txtRemoveFallYear1.setText("");
        countSem20_21 = 0;
    }
    //disables spring year 1
    public void disableSpringYear1()
    {
        txtAddSpringYear1.setEnabled(false);
        btnAddSpringYear1.setEnabled(false);
        listSpringClassesYear1.setEnabled(false);
        txtRemoveSpringYear1.setEnabled(false);
        btnRemoveSpringYear1.setEnabled(false);
        btnClearSpringYear1.setEnabled(false);
        txtAddSpringYear1.setText("");
        mod2.removeAllElements();
        txtRemoveSpringYear1.setText("");
        countSem20_21 = 0;
    }
    //disables year 2 (fall and spring year)
    public void disableYear2()
    {
        lbl_I_want_to_keep_track_ofYear2.setEnabled(false);
        lbl_semestersYear2.setEnabled(false);
        numSemestersYear2.setEnabled(false);
        numSemestersYear2.setValue(0);
        numSem21_22 = 0;
        lblYear2.setEnabled(false);
        lblSemestersYear2.setEnabled(false);
        lblNumSemestersYear2.setEnabled(false);
        chkFallYear2.setEnabled(false);
        chkFallYear2.setSelected(false);
        chkSpringYear2.setEnabled(false);
        chkSpringYear2.setSelected(false);
        disableFallYear2();
        disableSpringYear2();
    }
    //disables fall year 2
    public void disableFallYear2()
    {
        txtAddFallYear2.setEnabled(false);
        btnAddFallYear2.setEnabled(false);
        listFallClassesYear2.setEnabled(false);
        txtRemoveFallYear2.setEnabled(false);
        btnRemoveFallYear2.setEnabled(false);
        btnClearFallYear2.setEnabled(false);
        txtAddFallYear2.setText("");
        mod3.removeAllElements();
        txtRemoveFallYear2.setText("");
        countSem21_22 = 0;
    }
    //disables spring year 2
    public void disableSpringYear2()
    {
        txtAddSpringYear2.setEnabled(false);
        btnAddSpringYear2.setEnabled(false);
        listSpringClassesYear2.setEnabled(false);
        txtRemoveSpringYear2.setEnabled(false);
        btnRemoveSpringYear2.setEnabled(false);
        btnClearSpringYear2.setEnabled(false);
        txtAddSpringYear2.setText("");
        mod4.removeAllElements();
        txtRemoveSpringYear2.setText("");
        countSem21_22 = 0;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateZip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateZip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateZip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateZip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateZip().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFallYear1;
    private javax.swing.JButton btnAddFallYear2;
    private javax.swing.JButton btnAddSpringYear1;
    private javax.swing.JButton btnAddSpringYear2;
    private javax.swing.JButton btnClearFallYear1;
    private javax.swing.JButton btnClearFallYear2;
    private javax.swing.JButton btnClearSpringYear1;
    private javax.swing.JButton btnClearSpringYear2;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnRemoveFallYear1;
    private javax.swing.JButton btnRemoveFallYear2;
    private javax.swing.JButton btnRemoveSpringYear1;
    private javax.swing.JButton btnRemoveSpringYear2;
    private javax.swing.JCheckBox chkFallYear1;
    private javax.swing.JCheckBox chkFallYear2;
    private javax.swing.JCheckBox chkSpringYear1;
    private javax.swing.JCheckBox chkSpringYear2;
    private javax.swing.JCheckBox chkYear1;
    private javax.swing.JCheckBox chkYear2;
    private javax.swing.JCheckBox chkYear3;
    private javax.swing.JComboBox<String> cmboChoice;
    private javax.swing.JComboBox<String> cmboChoiceSchool;
    private javax.swing.JComboBox<String> cmboTypeOfStudent;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblChoice;
    private javax.swing.JLabel lblNumSemestersYear1;
    private javax.swing.JLabel lblNumSemestersYear2;
    private javax.swing.JLabel lblSemestersYear1;
    private javax.swing.JLabel lblSemestersYear2;
    private javax.swing.JLabel lblYear1;
    private javax.swing.JLabel lblYear2;
    private javax.swing.JLabel lblYears;
    private javax.swing.JLabel lbl_I_am_a;
    private javax.swing.JLabel lbl_I_am_a1;
    private javax.swing.JLabel lbl_I_want_to_keep_track_ofYear1;
    private javax.swing.JLabel lbl_I_want_to_keep_track_ofYear2;
    private javax.swing.JLabel lbl_semestersYear1;
    private javax.swing.JLabel lbl_semestersYear2;
    private javax.swing.JList<String> listFallClassesYear1;
    private javax.swing.JList<String> listFallClassesYear2;
    private javax.swing.JList<String> listSpringClassesYear1;
    private javax.swing.JList<String> listSpringClassesYear2;
    private javax.swing.JSpinner numSemestersYear1;
    private javax.swing.JSpinner numSemestersYear2;
    private javax.swing.JPanel pnl3;
    private javax.swing.JPanel pnl4;
    private javax.swing.JPanel pnlFallYear1;
    private javax.swing.JPanel pnlFallYear2;
    private javax.swing.JPanel pnlSchool;
    private javax.swing.JPanel pnlSpringYear1;
    private javax.swing.JPanel pnlSpringYear2;
    private javax.swing.JPanel pnlStart;
    private javax.swing.JPanel pnlYear1;
    private javax.swing.JPanel pnlYear2;
    private javax.swing.JTabbedPane tabZipCreator;
    private javax.swing.JTextField txtAddFallYear1;
    private javax.swing.JTextField txtAddFallYear2;
    private javax.swing.JTextField txtAddSpringYear1;
    private javax.swing.JTextField txtAddSpringYear2;
    private javax.swing.JTextField txtRemoveFallYear1;
    private javax.swing.JTextField txtRemoveFallYear2;
    private javax.swing.JTextField txtRemoveSpringYear1;
    private javax.swing.JTextField txtRemoveSpringYear2;
    // End of variables declaration//GEN-END:variables
}
